name: Release WebSQL

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        type: string

permissions:
  contents: write

jobs:
  build-web:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build web app
        run: npm run build
      
      - name: Upload web build
        uses: actions/upload-artifact@v4
        with:
          name: web-build
          path: dist/

  build-tauri:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            args: '--target universal-apple-darwin'
            name: 'macOS'
            rust_targets: 'aarch64-apple-darwin,x86_64-apple-darwin'
          - platform: 'ubuntu-22.04'
            args: ''
            name: 'Linux'
            rust_targets: ''
          - platform: 'windows-latest'
            args: ''
            name: 'Windows'
            rust_targets: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.rust_targets }}

      - name: Install dependencies (Ubuntu)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.1-dev \
            libwebkit2gtk-4.0-dev \
            build-essential \
            curl \
            wget \
            file \
            libxdo-dev \
            libssl-dev \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            libsoup-3.0-dev \
            libjavascriptcoregtk-4.1-dev

      - name: Install frontend dependencies
        run: npm ci

      - name: Build Tauri app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: ${{ github.event.inputs.version || github.ref_name }}
          releaseName: 'WebSQL ${{ github.event.inputs.version || github.ref_name }}'
          releaseBody: |
            # WebSQL Data Compare Tool
            
            A powerful browser-based tool for comparing data across different sources using SQL queries.
            
            ## üì¶ Downloads
            
            ### Desktop Apps (Recommended)
            - **Windows**: `WebSQL_x64_en-US.msi` (installer) or `WebSQL_x64-setup.exe`
            - **macOS**: `WebSQL_universal.dmg` (works on both Intel and Apple Silicon Macs)
            - **Linux**: 
              - `WebSQL_amd64.AppImage` (works on most distributions)
              - `WebSQL_amd64.deb` (Debian/Ubuntu)
            
            ### Web Version
            - üåê [Use WebSQL Online](https://jasperdj.github.io/websql/)
            
            ## ‚ú® What's New
            - Tauri-based desktop app (10MB download, 50MB RAM usage)
            - Native performance with system WebView
            - Cross-platform support (Windows, macOS, Linux)
            - All your data stays local - no cloud uploads
            
            ## üöÄ Features
            - Import CSV, Parquet files
            - Write SQL queries with syntax highlighting
            - Export results to CSV
            - Save queries and projects
            - Combine multiple files
            - Persistent tables using OPFS
            - Fast DuckDB WASM engine
            
            ## üìù Changelog
            See [CHANGELOG.md](https://github.com/jasperdj/websql/blob/main/CHANGELOG.md)
            
            ---
            *First time using WebSQL? Check out our [Quick Start Guide](https://github.com/jasperdj/websql#quick-start)*
          releaseDraft: false
          prerelease: false
          args: ${{ matrix.args }}

      - name: Upload Tauri artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tauri-${{ matrix.name }}
          path: |
            src-tauri/target/release/bundle/
            src-tauri/target/universal-apple-darwin/release/bundle/

